---
title: "R Packages for SDG 6.2 data"
subtitle: "Development and MSc Data Science project"
author: 
    - Linda Karani
    - Lars Sch√∂bitz
format: 
   revealjs:
       smaller: true
       transition: slide
       background-transition: zoom
       css: ["theme/theme.css"]
       theme: moon
       echo: false
editor_options: 
  chunk_output_type: console
---

## Agenda

1. R Package Development
2. Master Thesis Project
    - Fit models for estimates
        - Prepare primary indicators estimates based on JMP estimation rules
        - Prepare secondary indicator service levels
    - Extract r squared and p-values from models
        - Identify those with low values < 0.20 and high values > 0.80
        - Plots exploring the OLS regression using two countries with low and high rsq values
    - Plots showing the model fit coefficients(r.squared and p value)
    - Fit alternative models and assess goodness of fit
    - Next steps
3. Questions for Discussion

```{r, include=FALSE, message=FALSE, warning=FALSE}
#Loading necessary libraries

library(tidyverse)
library(modelr)
library(broom)
library(maps)
library(tmap) 
library(sf)

```

```{r, include=FALSE, message=FALSE, warning=FALSE }
#Getting data

#jmpraw <- read_rds("data/2020-09-30_jmp_sanitation_raw_data.rds")
jmpraw <- read_rds(here::here("data/2022-10-19_jmp_sanitation_raw_data.rds"))

jmp_measures_of_model_fit <- read_csv(here::here("data/derived/jmp_primary_indicator_estimates_measures_of_model_fit.csv"))

jmp_all_mean_value <-read_csv(here::here("data/derived/jmp_all_mean_estimates.csv"))
```

```{r}
# Functions

top10 <- function(data) {
    data  %>% 
        arrange(desc(n)) %>% 
        head(10)  %>% 
        mutate(country = countrycode::countrycode(iso3, origin = "iso3c", destination = "country.name")) %>% 
        select(country, n)
}

# Data Manipulation

jmp_iso3_frequency <- jmpraw %>% 
    count(iso3)

jmp_iso3_user_interface_2015 <- jmpraw %>% 
    filter(year >= 2015) %>% 
    filter(san_service_chain == "user interface") %>% 
    count(iso3, san_service_chain)

jmp_iso3_emptying_2015 <- jmpraw %>% 
    filter(year >= 2015) %>% 
    filter(san_service_chain == "emptying") %>% 
    count(iso3, san_service_chain)

jmp_iso3_ww_treatment_2015 <- jmpraw %>% 
    filter(year >= 2015) %>% 
    filter(san_service_chain == "WW treatment") %>% 
    count(iso3, san_service_chain)

jmp_iso3_fs_treatment_2015 <- jmpraw %>% 
    filter(year >= 2015) %>% 
    filter(san_service_chain == "FS treatment") %>% 
    count(iso3, san_service_chain)


data("World")

world_moll = st_transform(World, crs = "+proj=moll")

tmap_mode("view")

tmap_options(basemaps = "OpenStreetMap")

tmap_mode("plot")
```


# R Package Development {background-color="#eee8d5"}

## R Data Package - Benefits

- Data accessible as a single table for any analysis tool
- Data can be imported to R using one command
- Public website with detailed documentation
    _ e.g. `washdata` R Package [https://katilingban.io/washdata/index.html](https://katilingban.io/washdata/index.html)

## R Data Package - Sanitation {.smaller}

- Data in long format (19,528 rows)
- 9 variables

```{r}

jmpraw %>% 
    relocate(iso3) %>%
    relocate(value, .after = san_service_chain) %>% 
    head(4) %>% 
    knitr::kable(digits = 1)

```

## R Data Package - New Variables {.smaller}

- `residence`: urban/rural/national
- `san_service_chain` (Sanitation Service Chain):

```{r}

jmpraw %>% 
    count(san_service_chain) %>% 
    knitr::kable()

```

## R Data Package - Use Cases {.smaller auto-animate="true"}

::: {.incremental}

1. Using JMP methods to reproduce estimates and apply different models (Linda Karani - MSc Data Science)

2. Writing an R Package with a function to produce estimates (and a function to produce service ladder plots) 


```{r}
#| eval: false
#| echo: true
#| fenced: true

```

:::

## R Data Package - Use Cases {.smaller auto-animate="true"}

1. Using JMP methods to reproduce estimates and apply different models (Linda Karani - MSc Data Science)

2. Writing an R Package with a function to produce estimates (and a function to produce service ladder plots) 

```{r}
#| eval: false
#| echo: true
#| fenced: true

estimate(iso3 = "AFG",           # default: all iso3 codes
         year = 2010:2030,       # Single year or range of years
         var_short = NULL,       # default: all variables (NULL)
         residence = "national") # default: national

```


## R Data Package - Use Cases {.smaller auto-animate="true"}

1. Using JMP methods to reproduce estimates and apply different models (Linda Karani - MSc Data Science)

2. Writing an R Package with a function to produce estimates (and a function to produce service ladder plots) 

```{r}
#| eval: false
#| echo: true
#| fenced: true

estimate(iso3 = "AFG",           # default: all iso3 codes
         year = 2010:2030,       # Single year or range of years
         var_short = NULL,       # default: all variables (NULL)
         residence = "national") # default: national

```

3. Great potential for unforeseen use cases enabled by making the data readily accessible (research, teaching, joining with other data, etc.)

## 

```{r}

world_moll %>% 
    left_join(jmp_iso3_emptying_2015, by = c("iso_a3" = "iso3")) %>% 
    filter(continent != "Antarctica") %>% 
    tm_shape() +
    tm_polygons(
        col = "n", 
        title = "No. of data points",
        #legend.hist = TRUE,
        #palette = "Oranges", 
        style = "fixed",
        contrast = c(0.1, 1),
        breaks = c(1, 11, 21, 31),
        #n = 4, 
        textNA = "No Data",
        colorNA = "grey90", 
        lwd = 0.5
    ) +
    tm_layout(
        main.title = "JMP raw data collection - Number of data points for 'emptying' since 2015",
        main.title.position = "center",
        title.position = c("left", "top"),
        #legend.outside = TRUE,
        scale = 1.5,
        #inner.margins = c(0, .02, .02, .02),
        #outer.margins = c(0, 0, 0, 0), frame = TRUE, 
    ) 

```

##

```{r}
top10(jmp_iso3_emptying_2015) %>% 
    knitr::kable(caption = "JMP raw data collection: Number of data points for 'emptying' since 2015")
```

## R Data Package - What's next?

- Submission of proposal for further development to [ORD (Open Research Data) Programme of ETH Domain](https://ethrat.ch/wp-content/uploads/2022/10/Application-guidelines_TrackC-Contribute-projects-3rd-call-1.pdf) (15k in-kind + 15k ETH Board), due: 12th December
- Submission of a proposal to Colorado WASH Symposium (focus on Linda's work), due: 25th November

::: {.aside}
https://ethrat.ch/wp-content/uploads/2022/10/Application-guidelines_TrackC-Contribute-projects-3rd-call-1.pdf
::: 

# Master Thesis Project {background-color="#eee8d5"}

## Masters thesis outline

::: incremental

### Objectives

- Generate sanitation estimates for rural and urban from raw packaged data using documented methods
     - only the primary indicators and derived secondary service levels:
         - basic sanitation service
         - limited sanitation service
         - unimproved sanitation service
         - no sanitation service

- Fit different statistical models to assess goodness of fit

### Status

- Managed to derive estimates for the primary indicators and derived secondary
service levels

:::


```{r}
#Filter for R2 less than 0.30
options(scipen=999, digits = 2)


high_rsq <- jmp_measures_of_model_fit %>% 
    group_by(var_short) %>% 
    filter(r.squared > 0.80)

low_rsq <- jmp_measures_of_model_fit %>% 
    group_by(var_short) %>% 
    filter(r.squared < 0.20)

```

# Plot linear fit for different countries


## OLS Regression : r squared \< 0.20

## Afghanistan sewer connection

::: columns
::: {.column width="80%"}

```{r ols-regression, warning=FALSE, echo=FALSE, message=FALSE}


plot1 <- jmp_all_mean_value %>% 
    filter(var_long %in% c("Sewer") & iso3 == "AFG") %>%
    ggplot(aes(x = year, y = mean_value)) + geom_point() + facet_wrap(~residence) +geom_smooth(method = "lm", se = FALSE)+
    labs(x = "year",
         y = "% coverage",
         title = "Afghanistan Sewer connection in rural and urban contexts")+
    theme_gray() +
    theme(title = element_text(size = 12), 
    axis.text = element_text(size = 12),
    axis.title = element_text(size = 12, face = "bold"))

plot1



```
:::

::: {.column width="20%"}

-   Afghanistan r.sq rural = 0.0426018
-   Afghanistan r.sq urban = 0.0170736
:::
:::



## Tanzania open defecation

::: columns
::: {.column width="80%"}

```{r , warning=FALSE, echo=FALSE, message=FALSE}

plot2 <- jmp_all_mean_value %>% 
    filter(var_long %in% c("Open defecation") & iso3 == "TZA") %>%
    ggplot(aes(x = year, y = mean_value)) + geom_point() + facet_wrap(~residence) +geom_smooth(method = "lm", se = FALSE)+
    labs(x = "year",
         y = "% coverage",
         title = "Tanzania Open defecation in rural and urban contexts")+
    theme_gray() +
    theme(title = element_text(size = 12), 
    axis.text = element_text(size = 12),
    axis.title = element_text(size = 12, face = "bold"))

plot2

```

:::

::: {.column width="20%"}

-   Tanzania r.sq rural    = 0.1824534
-   Tanzania r.sq urban    = 0.0296412	
:::
:::



## OLS Regression : r squared \> 0.80

## Argentina Sewer connection OLS regression

::: columns
::: {.column width="80%"}

```{r ols-regression2, warning=FALSE, echo=FALSE, message=FALSE}



plot11 <- jmp_all_mean_value %>% 
    filter(var_long %in% c("Sewer") & iso3 == "ARG") %>%
    ggplot(aes(x = year, y = mean_value)) + geom_point() + facet_wrap(~residence) +geom_smooth(method = "lm", se = FALSE)+
    labs(x = "year",
         y = "% coverage",
         title = "Argentina Sewer connection in rural and urban contexts")+
    theme_gray() +
    theme(title = element_text(size = 12), 
    axis.text = element_text(size = 12),
    axis.title = element_text(size = 12, face = "bold"))

plot11


```
:::

::: {.column width="20%"}

-   Argentina r.sq rural = 0.82
-   Argentina r.sq urban = 0.87
:::
:::




## Brazil Improved sanitation OLS regression

::: columns
::: {.column width="80%"}

```{r, warning=FALSE, echo=FALSE, message=FALSE}

plot21 <- jmp_all_mean_value %>% 
    filter(var_long %in% c("Improved") & iso3 == "BRA") %>%
    ggplot(aes(x = year, y = mean_value)) + geom_point() + facet_wrap(~residence) +geom_smooth(method = "lm", se = FALSE)+
    labs(x = "year",
         y = "% coverage",
         title = "Brazil Improved Sanitation in rural and urban contexts")+
    theme_gray() +
    theme(title = element_text(size = 12), 
    axis.text = element_text(size = 12),
    axis.title = element_text(size = 12, face = "bold"))

plot21

```

:::

::: {.column width="20%"}
-   Brazil r.sq rural = 0.90
-   Brazil r.sq urban = 0.87
:::
:::



# Plotting Model coefficients

## Model fit : R squared {auto-animate="true" auto-animate-easing="ease-in-out"}

```{r, warning=FALSE, echo=FALSE, message=FALSE}


jmp_measures_of_model_fit %>% 
    ggplot(aes(x = var_long, y = r.squared)) + geom_boxplot(fill = "blue") +
    geom_jitter(width = 0.2)+
    facet_wrap(~residence)+
    labs(title = "Model coefficients", x = "Primary indicator",
         subtitle = "r.squared")




```

## Model fit : P value {auto-animate="true" auto-animate-easing="ease-in-out"}

```{r, warning=FALSE, echo=FALSE, message=FALSE}
jmp_measures_of_model_fit %>% 
    ggplot(aes(x = var_long, y = p.value)) + geom_boxplot(fill = "blue") +  
    geom_jitter(width = 0.2)+  
    facet_wrap(~residence)+
    labs(title = "Model coefficients", x = "Primary indicator",
         subtitle = "pvalue")

    
```

# Alternative models

-   Fitting different models to the data to compare goodness of fit

```{r , warning=FALSE, include=FALSE, echo=FALSE, message=FALSE}
# Fitting a polynomial of order 4


poly4model <- jmp_all_mean_value %>% 
    filter(iso3  %in% c("AFG", "TZA")) %>% 
    nest_by(iso3, residence, var_short) %>% 
    mutate(model = list(lm(mean_value ~ poly(year,4, raw = TRUE), data = data)))


rsquared <- poly4model|> 
    summarise(rsq = summary(model)$r.squared) 


  
```

```{r , warning=FALSE, include=FALSE, echo=FALSE, message=FALSE}
#Splines

library(splines)

splinemodel <- jmp_all_mean_value %>% 
    filter(iso3  %in% c("AFG", "TZA")) %>% 
    nest_by(iso3, residence, var_short) %>% 
    mutate(model = list(lm(mean_value ~ bs(year, knots = quantile(jmp_all_mean_value$year, p = c(0.25,0.5,0.75))), data = data)))


rsquared <- splinemodel|> 
    summarise(rsq = summary(model)$r.squared) 

```

```{r, warning=FALSE, include=FALSE, echo=FALSE, message=FALSE, eval=FALSE}

# Generalized Additive Model

library(mgcv)
library(kableExtra)
library(gratia)

gam_model <- jmp_all_mean_value %>% 
    filter(iso3  %in% c("AFG", "TZA")) %>% 
    group_by(iso3, residence, var_short) %>%
    nest()
    
##Create a function to fit the models    

country_gam <- function(df) {
    gam(mean_value ~ year, family=gaussian, data = df, na.omit=TRUE)
    }
    
##Apply country loess to each element in our df

gam_model <- gam_model %>% 
    mutate(model = map(data, country_gam))

#Add residuals to the model

gam_model <- gam_model %>% 
    mutate(
        resids = map2(data, model, add_residuals))

#unnest

resids <- unnest(gam_model,resids)

#Get statistics using glance

gam_model %>% 
    mutate(glance = map(model,broom::glance)) %>% 
    unnest(glance)


```



```{r , warning=FALSE, include=FALSE,echo=FALSE, message=FALSE, include=FALSE, eval=FALSE}
#Loess



loess_model <- jmp_all_mean_value %>% 
    filter(iso3  %in% c("AFG", "TZA")) %>% 
    group_by(iso3, residence, var_short) %>%
    nest()
    
##Create a function to fit the models    

country_loess <- function(df) {
    loess(mean_value ~ year, data = df,span = 0.85, degree = 2, normalize = TRUE)
    }
    
##Apply country loess to each element in our df

loess_model <- loess_model %>% 
    mutate(model = map(data, country_loess))

loess_model$model


```



# Plot using a 4th order polynomial

## Afghanistan Sewer connection

::: columns
::: {.column width="80%"}
```{r , warning=FALSE, echo=FALSE, message=FALSE}
plot3 <- jmp_all_mean_value %>% 
    filter(var_long %in% c("Sewer") & iso3 == "AFG") %>%
    ggplot(aes(x = year, y = mean_value)) + geom_point() + facet_wrap(~residence) +
    stat_smooth(method = "lm", formula =  y ~ poly(x,4, raw = TRUE))+
    labs(x = "year",
         y = "% coverage",
         title = "AFG Sewer connection in rural and urban contexts")+
    theme_gray() +
    theme(title = element_text(size = 12), 
    axis.text = element_text(size = 12),
    axis.title = element_text(size = 12, face = "bold"))

plot3
```

:::

::: {.column width="20%"}
-   Afghanistan r.sq rural = 0.043
-   Afghanistan r.sq urban = 0.022

:::
:::



## Tanzania open defecation

::: columns
::: {.column width="80%"}

```{r , warning=FALSE, echo=FALSE, message=FALSE}

plot4 <- jmp_all_mean_value %>% 
    filter(var_long %in% c("Open defecation") & iso3 == "TZA") %>%
    ggplot(aes(x = year, y = mean_value)) + geom_point() + facet_wrap(~residence) +
    stat_smooth(method = "lm", formula =  y ~ poly(x,4, raw = TRUE))+
    labs(x = "year",
         y = "% coverage",
         title = "Tanzania Open Defecation in rural and urban contexts")+
    theme_gray() +
    theme(title = element_text(size = 12), 
    axis.text = element_text(size = 12),
    axis.title = element_text(size = 12, face = "bold"))

plot4

```
:::

::: {.column width="20%"}

-   Tanzania r.sq rural    = 0.487
-   Tanzania r.sq urban    = 0.033
:::
:::

# Plot using splines


## Afghanistan sewer connection

::: columns
::: {.column width="80%"}
```{r, warning=FALSE, echo=FALSE, message=FALSE}
plot5 <- jmp_all_mean_value %>% 
    filter(var_long %in% c("Sewer") & iso3 == "AFG") %>%
    ggplot(aes(x = year, y = mean_value)) + geom_point() + facet_wrap(~residence) +
    stat_smooth(method = "lm", formula =  y ~ splines::bs(x, df = 3))+
    labs(x = "year",
         y = "% coverage",
         title = "AFG Sewer connection in rural and urban contexts")+
    theme_gray() +
    theme(title = element_text(size = 12), 
    axis.text = element_text(size = 12),
    axis.title = element_text(size = 12, face = "bold"))

plot5
```

:::

::: {.column width="20%"}

-   Afghanistan r.sq rural = 1.00
-   Afghanistan r.sq urban = 1.00

:::
:::



## Tanzania Open defecation

::: columns
::: {.column width="80%"}


```{r, warning=FALSE, echo=FALSE, message=FALSE}
plot6 <- jmp_all_mean_value %>% 
    filter(var_long %in% c("Open defecation") & iso3 == "TZA") %>%
    ggplot(aes(x = year, y = mean_value)) + geom_point() + facet_wrap(~residence) +
    stat_smooth(method = "lm", formula =  y ~ splines::bs(x, df = 3))+
    labs(x = "year",
         y = "% coverage",
         title = "Tanzania Open defecation in rural and urban contexts")+
    theme_gray() +
    theme(title = element_text(size = 12), 
    axis.text = element_text(size = 12),
    axis.title = element_text(size = 12, face = "bold"))

plot6

```
:::

::: {.column width="20%"}

-   Tanzania r.sq rural    = 0.65
-   Tanzania r.sq urban    = 0.37
:::
:::

# Plot using GAM

## Afghanistan sewer connection

::: columns
::: {.column width="80%"}

```{r , warning=FALSE, echo=FALSE, message=FALSE}
plot7 <- jmp_all_mean_value %>% 
    filter(var_long %in% c("Sewer") & iso3 == "AFG") %>%
    ggplot(aes(x = year, y = mean_value)) + geom_point() + facet_wrap(~residence) +
    stat_smooth(method = "gam", formula =  y ~ s(x, k=3))+
    labs(x = "year",
         y = "% coverage",
         title = "AFG Sewer connection in rural and urban contexts")+
    theme_gray() +
    theme(title = element_text(size = 12), 
    axis.text = element_text(size = 12),
    axis.title = element_text(size = 12, face = "bold"))

plot7

?stat_smooth
```

:::

::: {.column width="20%"}

-   Afghanistan BIC rural = 18.5
-   Afghanistan BIC urban = 36.1

:::
:::



## Tanzania open defecation

::: columns
::: {.column width="80%"}


```{r , warning=FALSE, echo=FALSE, message=FALSE}
plot8 <- jmp_all_mean_value %>% 
    filter(var_long %in% c("Open defecation") & iso3 == "TZA") %>%
    ggplot(aes(x = year, y = mean_value)) + geom_point() + facet_wrap(~residence) +
    stat_smooth(method = "gam", formula =  y ~ s(x, k=3))+
    labs(x = "year",
         y = "% coverage",
         title = "Tanzania open defecation in rural and urban contexts")+
    theme_gray() +
    theme(title = element_text(size = 12), 
    axis.text = element_text(size = 12),
    axis.title = element_text(size = 12, face = "bold"))


plot8
```


:::

::: {.column width="20%"}

-   Tanzania BIC rural = 87.6
-   Tanzania BIC urban = 49.2
:::
:::

# Plotting using LOESS

## Afghanistan sewer connection

::: columns
::: {.column width="80%"}

```{r, warning=FALSE, echo=FALSE, message=FALSE}

plot9 <- jmp_all_mean_value %>% 
    filter(var_long %in% c("Sewer") & iso3 == "AFG") %>%
    ggplot(aes(x = year, y = mean_value)) + geom_point() + facet_wrap(~residence) +
    stat_smooth(method = loess, span = 0.90)+
    labs(x = "year",
         y = "% coverage",
         title = "AFG Sewer connection in rural and urban contexts")+
    theme_gray() +
    theme(title = element_text(size = 12), 
    axis.text = element_text(size = 12),
    axis.title = element_text(size = 12, face = "bold"))

plot9
```

:::

::: {.column width="20%"}

-   Afghanistan RSE rural = 0.043
-   Afghanistan RSE urban = 0.022
:::
:::

## Tanzania open defecation

::: columns
::: {.column width="80%"}

```{r, warning=FALSE, echo=FALSE, message=FALSE}
plot10 <- jmp_all_mean_value %>% 
    filter(var_long %in% c("Open defecation") & iso3 == "TZA") %>%
    ggplot(aes(x = year, y = mean_value)) + geom_point() + facet_wrap(~residence) +
    stat_smooth(method = loess, span = 0.90)+
    labs(x = "year",
         y = "% coverage",
         title = "Tanzania open defecation in rural and urban contexts")+
    theme_gray() +
    theme(title = element_text(size = 12), 
    axis.text = element_text(size = 12),
    axis.title = element_text(size = 12, face = "bold"))

plot10

```
:::

::: {.column width="20%"}

-   Tanzania RSE rural = 0.487
-   Tanzania RSE urban = 0.033
:::
:::

# Discussion {background-color="#eee8d5"}

## Questions

1. How are country files updated on the server? 
    - How often? All together, or one by one as there is new data?

2. The current database for raw data shows 379 different sources. They are all abbreviated. Do you have a table where all these abbreviations are spelled out?

3. Ratio RS1

> "Other ratios used for 'basic' indicators (RW1, RS1) are calculated using simple averages" - JMP Methodology, March 2018

# Thanks

## Thanks!

**Data source:** washdata.org

**Slides - source code:** https://github.com/KaraniLinda/SDG-6-2-Reproducibility/blob/main/slides/r-packages-for-sdg62-data-lkarani-lschoebitz.qmd

**Slides - PDF download:** https://github.com/KaraniLinda/SDG-6-2-Reproducibility/raw/main/slides/r-packages-for-sdg62-data-lkarani-lschoebitz.pdf

