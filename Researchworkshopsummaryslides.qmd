---
title: "Research workshop summary slides"
format: 
   revealjs:
       smaller: true
       transition: slide
       background-transition: zoom
       css: ["theme/theme.css"]
       theme: moon
       echo: false
---

# SDG 6.2 Reproducibility

## Agenda {.smaller}

Overall vision (raw data, estimates code, jmp estimates package)

Raw data package documentation (proof-of-concept website)

-   Statistics of the raw data

Master Thesis Project

-   Reproducing the sanitation estimates
-   Plots exploring the OLS regression
-   Plots showing the model fit coefficients
-   Alternative models and coefficients
-   Next steps

```{r, include=FALSE, message=FALSE, warning=FALSE}
#Loading necessary libraries

library(tidyverse)
library(modelr)
library(broom)

```

```{r, include=FALSE, message=FALSE, warning=FALSE }
#Getting data

#jmpraw <- read_rds("data/2020-09-30_jmp_sanitation_raw_data.rds")
jmpraw <- read_csv("https://raw.githubusercontent.com/larnsce/washr/master/data/derived_data/2022-10-18_jmp_sanitation_raw_data.csv")

jmp_measures_of_model_fit <- read_csv(here::here("data/derived/jmp_primary_indicator_estimates_measures_of_model_fit.csv"))

jmp_all_mean_value <-read_csv(here::here("data/derived/jmp_all_mean_estimates.csv"))
```

## Masters thesis otline

::: incremental

Objectives

- Generate sanitation estimates for rural and urban from raw packaged data using documented methods
     - only the primary indicators and derived secondary service levels:
         - basic sanitation service
         - limited sanitation service
         - unimproved sanitation service
         - no sanitation service

- Fit different statistical models to assess goodness of fit

Status

- Managed to derive estimates for the primary indicators and derived secondary
service levels

:::





```{r}
#Filter for R2 less than 0.30
options(scipen=999, digits = 2)


high_rsq <- jmp_measures_of_model_fit %>% 
    group_by(var_short) %>% 
    filter(r.squared > 0.80)

low_rsq <- jmp_measures_of_model_fit %>% 
    group_by(var_short) %>% 
    filter(r.squared < 0.20)

```



# Plot linear fit for different countries

## OLS Regression : r squared \< 0.30

::: columns
::: {.column width="80%"}

```{r ols-regression, warning=FALSE, echo=FALSE, message=FALSE}

library(gridExtra)

plot1 <- jmp_all_mean_value %>% 
    filter(var_long %in% c("Sewer") & iso3 == "AFG") %>%
    ggplot(aes(x = year, y = mean_value)) + geom_point() + facet_wrap(~residence) +geom_smooth(method = "lm", se = FALSE)+
    labs(x = "year",
         y = "% coverage",
         title = "Afghanistan Sewer connection in rural and urban contexts")+
    theme_gray() +
    theme(title = element_text(size = 12), 
    axis.text = element_text(size = 12),
    axis.title = element_text(size = 12, face = "bold"))


plot2 <- jmp_all_mean_value %>% 
    filter(var_long %in% c("Open defecation") & iso3 == "TZA") %>%
    ggplot(aes(x = year, y = mean_value)) + geom_point() + facet_wrap(~residence) +geom_smooth(method = "lm", se = FALSE)+
    labs(x = "year",
         y = "% coverage",
         title = "Tanzania Open defecation in rural and urban contexts")+
    theme_gray() +
    theme(title = element_text(size = 12), 
    axis.text = element_text(size = 12),
    axis.title = element_text(size = 12, face = "bold"))

grid.arrange(plot1, plot2)

```

:::

::: {.column width="20%"}
-   Afghanistan r.sq rural = 0.0426018
-   Afghanistan r.sq urban = 0.0170736
-   Tanzania r.sq rural    = 0.1824534
-   Tanzania r.sq urban    = 0.0296412	
:::
:::

## OLS Regression : r squared \> 0.80

```{r ols-regression, warning=FALSE, echo=FALSE, message=FALSE}

library(gridExtra)

plot1 <- jmp_all_mean_value %>% 
    filter(var_long %in% c("Sewer") & iso3 == "ARG") %>%
    ggplot(aes(x = year, y = mean_value)) + geom_point() + facet_wrap(~residence) +geom_smooth(method = "lm", se = FALSE)+
    labs(x = "year",
         y = "% coverage",
         title = "Argentina Sewer connection in rural and urban contexts")+
    theme_gray() +
    theme(title = element_text(size = 12), 
    axis.text = element_text(size = 12),
    axis.title = element_text(size = 12, face = "bold"))


plot2 <- jmp_all_mean_value %>% 
    filter(var_long %in% c("Improved") & iso3 == "BRA") %>%
    ggplot(aes(x = year, y = mean_value)) + geom_point() + facet_wrap(~residence) +geom_smooth(method = "lm", se = FALSE)+
    labs(x = "year",
         y = "% coverage",
         title = "Brazil Improved Sanitation in rural and urban contexts")+
    theme_gray() +
    theme(title = element_text(size = 12), 
    axis.text = element_text(size = 12),
    axis.title = element_text(size = 12, face = "bold"))

grid.arrange(plot1, plot2)

```


# Plotting Model coefficients

## Model fit : R squared {auto-animate="true" auto-animate-easing="ease-in-out"}

```{r, warning=FALSE, echo=FALSE, message=FALSE}


jmp_measures_of_model_fit %>% 
    ggplot(aes(x = var_long, y = r.squared)) + geom_boxplot(fill = "blue") +
    geom_jitter()+
    facet_wrap(~residence)+
    labs(title = "Model coefficients",
         subtitle = "r.squared")




```

## Model fit : P value {auto-animate="true" auto-animate-easing="ease-in-out"}

```{r, warning=FALSE, echo=FALSE, message=FALSE}
jmp_measures_of_model_fit %>% 
    ggplot(aes(x = var_long, y = p.value)) + geom_boxplot(fill = "blue") +  
    geom_jitter()+  
    facet_wrap(~residence)+
    labs(title = "Model coefficients",
         subtitle = "pvalue")

    
```

```{r, warning=FALSE, echo=FALSE, message=FALSE, include=FALSE}

jmpfilter <- jmprsquared %>% 
    filter(var_long %in% c("Sewer", "Shared", "Improved") & rsq < 0.35)

jmpfilter

```



# Alternative models

-   Fitting different models to the data to compare goodness of fit

```{r , warning=FALSE, include=FALSE, echo=FALSE, message=FALSE}
# Fitting a polynomial of order 4


poly4model <- jmp_all_mean_value %>% 
    nest_by(iso3, residence, var_short) %>% 
    mutate(model = list(lm(mean_value ~ poly(year,4, raw = TRUE), data = data)))


rsquared <- poly4model|> 
    summarise(rsq = summary(model)$r.squared) 


  
```

```{r , warning=FALSE, include=FALSE, echo=FALSE, message=FALSE}
#Splines

library(splines)

splinemodel <- jmp_all_mean_value %>% 
    nest_by(iso3, residence, var_short) %>% 
    mutate(model = list(lm(mean_value ~ bs(year, knots = quantile(jmp_all_mean_value$year, p = c(0.25,0.5,0.75))), data = data)))


rsquared <- splinemodel|> 
    summarise(rsq = summary(model)$r.squared) 

```

```{r , warning=FALSE,include=FALSE, echo=FALSE, message=FALSE}
# Generalized Additive Model

library(mgcv)
library(kableExtra)
library(gratia)

foml <- mean_value ~ s(year, k=2, bs = "tp")

GAMmodel <- jmp_all_mean_value %>% 
    group_by(iso3, residence, var_short) %>% 
    nest() %>% 
    mutate(model = map(data, ~mgcv::gam(formula = foml , data = ., na.omit = TRUE))) 


 rsquared <- splinemodel|> 
    summarise(rsq = summary(model)$r.squared)    


tidy(GAMmodel) %>% kable()
    
```

```{r, warning=FALSE,include=FALSE, echo=FALSE, message=FALSE}
jmp_all_mean_value %>% add_residuals(GAMmodel) %>% add_fitted(GAMmodel) %>% kable() %>%  scroll_box(height = "200px")
```

```{r , warning=FALSE, include=FALSE,echo=FALSE, message=FALSE, include=FALSE}
#Loess

loessmodel <- jmp_all_mean_value %>% 
    group_by(iso3, residence, var_long) %>%
    loess(mean_value ~ year, data = ., span = 0.5, degree = 2)

summary(loessmodel)

augment(loessmodel, se_fit = TRUE) %>% kable() %>%  scroll_box(height = "200px")

```

# Plots

## Plot using a 4th order polynomial

::: columns
::: {.column width="80%"}
```{r , warning=FALSE, echo=FALSE, message=FALSE}

plot3 <- jmp_all_mean_value %>% 
    filter(var_long %in% c("Sewer") & iso3 == "AFG") %>%
    ggplot(aes(x = year, y = mean_value)) + geom_point() + facet_wrap(~residence) +
    stat_smooth(method = "lm", formula =  y ~ poly(x,4, raw = TRUE))+
    labs(x = "year",
         y = "% coverage",
         title = "AFG Sewer connection in rural and urban contexts")+
    theme_gray() +
    theme(title = element_text(size = 12), 
    axis.text = element_text(size = 12),
    axis.title = element_text(size = 12, face = "bold"))

plot4 <- jmp_all_mean_value %>% 
    filter(var_long %in% c("Improved") & iso3 == "ZWE") %>%
    ggplot(aes(x = year, y = mean_value)) + geom_point() + facet_wrap(~residence) +
    stat_smooth(method = "lm", formula =  y ~ poly(x,4, raw = TRUE))+
    labs(x = "year",
         y = "% coverage",
         title = "Zimbambwe Improved Sanitation in rural and urban contexts")+
    theme_gray() +
    theme(title = element_text(size = 12), 
    axis.text = element_text(size = 12),
    axis.title = element_text(size = 12, face = "bold"))

grid.arrange(plot3,plot4)

```
:::

::: {.column width="20%"}
-   Simple approach to model non-linear relationships
-   It adds polynomial terms or quadratic terms(square,cubes etc) to a regression
:::
:::

## Plot using splines

::: columns
::: {.column width="80%"}
```{r, warning=FALSE, echo=FALSE, message=FALSE}

plot5 <- jmp_all_mean_value %>% 
    filter(var_long %in% c("Sewer") & iso3 == "AFG") %>%
    ggplot(aes(x = year, y = mean_value)) + geom_point() + facet_wrap(~residence) +
    stat_smooth(method = "lm", formula =  y ~ splines::bs(x, df = 3))+
    labs(x = "year",
         y = "% coverage",
         title = "AFG Sewer connection in rural and urban contexts")+
    theme_gray() +
    theme(title = element_text(size = 12), 
    axis.text = element_text(size = 12),
    axis.title = element_text(size = 12, face = "bold"))

plot6 <- jmp_all_mean_value %>% 
    filter(var_long %in% c("Improved") & iso3 == "ZWE") %>%
    ggplot(aes(x = year, y = mean_value)) + geom_point() + facet_wrap(~residence) +
    stat_smooth(method = "lm", formula =  y ~ splines::bs(x, df = 3))+
    labs(x = "year",
         y = "% coverage",
         title = "Zimbambwe Improved Sanitation in rural and urban contexts")+
    theme_gray() +
    theme(title = element_text(size = 12), 
    axis.text = element_text(size = 12),
    axis.title = element_text(size = 12, face = "bold"))

grid.arrange(plot5,plot6)


```
:::

::: {.column width="20%"}
-   Fits a smooth curve with a series of polynomial segments
-   The values delimiting the spline segments are called knots
:::
:::

## Plot using GAM

::: columns
::: {.column width="80%"}
```{r , warning=FALSE, echo=FALSE, message=FALSE}

plot7 <- jmp_all_mean_value %>% 
    filter(var_long %in% c("Sewer") & iso3 == "AFG") %>%
    ggplot(aes(x = year, y = mean_value)) + geom_point() + facet_wrap(~residence) +
    stat_smooth(method = gam, formula =  y ~ s(x, k=3))+
    labs(x = "year",
         y = "% coverage",
         title = "AFG Sewer connection in rural and urban contexts")+
    theme_gray() +
    theme(title = element_text(size = 12), 
    axis.text = element_text(size = 12),
    axis.title = element_text(size = 12, face = "bold"))


plot8 <- jmp_all_mean_value %>% 
    filter(var_long %in% c("Improved") & iso3 == "ZWE") %>%
    ggplot(aes(x = year, y = mean_value)) + geom_point() + facet_wrap(~residence) +
    stat_smooth(method = gam, formula =  y ~ s(x, k=3))+
    labs(x = "year",
         y = "% coverage",
         title = "Zimbambwe Improved Sanitation in rural and urban contexts")+
    theme_gray() +
    theme(title = element_text(size = 12), 
    axis.text = element_text(size = 12),
    axis.title = element_text(size = 12, face = "bold"))


grid.arrange(plot7,plot8)
```
:::

::: {.column width="20%"}
-   Fits spline models with automated selection of knots
:::
:::

## Plotting using LOESS

::: columns
::: {.column width="80%"}
```{r, warning=FALSE, echo=FALSE, message=FALSE}

plot9 <- jmp_all_mean_value %>% 
    filter(var_long %in% c("Sewer") & iso3 == "AFG") %>%
    ggplot(aes(x = year, y = mean_value)) + geom_point() + facet_wrap(~residence) +
    stat_smooth(method = loess, span = 0.90)+
    labs(x = "year",
         y = "% coverage",
         title = "AFG Sewer connection in rural and urban contexts")+
    theme_gray() +
    theme(title = element_text(size = 12), 
    axis.text = element_text(size = 12),
    axis.title = element_text(size = 12, face = "bold"))

plot10 <- jmp_all_mean_value %>% 
    filter(var_long %in% c("Improved") & iso3 == "ZWE") %>%
    ggplot(aes(x = year, y = mean_value)) + geom_point() + facet_wrap(~residence) +
    stat_smooth(method = loess, span = 0.90)+
    labs(x = "year",
         y = "% coverage",
         title = "Zimbambwe Improved Sanitation in rural and urban contexts")+
    theme_gray() +
    theme(title = element_text(size = 12), 
    axis.text = element_text(size = 12),
    axis.title = element_text(size = 12, face = "bold"))

grid.arrange(plot9,plot10)

```
:::

::: {.column width="20%"}
-   Also a smoothing technique but tends to be slow on large datasets
:::
:::
